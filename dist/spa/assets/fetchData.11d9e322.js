var y=Object.defineProperty;var g=(c,t,e)=>t in c?y(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var s=(c,t,e)=>(g(c,typeof t!="symbol"?t+"":t,e),e);import{a}from"./api.45c934da.js";import{r as i}from"./index.a8db99c8.js";class p{constructor(){s(this,"categories");s(this,"getAllCategoriesUri");s(this,"productsByCategory");s(this,"getProductByCategoryUri");s(this,"getCategoryByName");s(this,"getCategoryByNameUri");s(this,"products");s(this,"product");s(this,"getAllProductsUri");this.categories=i([]),this.productsByCategory=i([]),this.getCategoryByName=i({name:"",photo:"",description:"",count_products:0,counts:0,grm:0,id_category:0,ingredients:"",price:0,pricePerProduct:0}),this.product=i({name:"",photo:"",description:"",count_products:0,counts:0,grm:0,id_category:0,ingredients:"",price:0,pricePerProduct:0}),this.getAllCategoriesUri=a.getAllCategories,this.getProductByCategoryUri=a.getProductsByCategory,this.getCategoryByNameUri=a.getCategoryByName,this.products=i([]),this.getAllProductsUri=a.getAllProducts}getAllCategories(){return this.categories}getAllProductsByCategory(){return this.productsByCategory}getOneCategoryByName(){return this.getCategoryByName}getAllProductsMethod(){return this.products}getOneProductMethod(){return this.product}async fetchAllProducts(){try{const t=await fetch(this.getAllProductsUri);this.products.value=await t.json()}catch(t){console.log(t)}}async fetchOneProduct(t){try{const e=await fetch(`${this.getAllProductsUri}${t}`);this.product.value=await e.json()}catch(e){console.log(e)}}async fetchAllCategories(){try{const t=await fetch(this.getAllCategoriesUri);this.categories.value=await t.json()}catch(t){console.log(t)}}async fetchProductsByCategory(t){try{const r=await(await fetch(`${this.getProductByCategoryUri}/${t}`)).json();this.productsByCategory.value=await(r==null?void 0:r.products)}catch(e){console.log(e)}}async fetchOneCategory(t){try{const r=await(await fetch(`${this.getCategoryByNameUri}/${t}`)).json();this.getCategoryByName.value=r}catch(e){console.log(e)}}async updateOneCategory(t,e,r){if(r!=null){const o=new FormData;o.append("file",r);try{const n=await fetch(`${a.uploadImage}`,{method:"POST",body:o})}catch(n){console.log(n)}}try{const o=await fetch(`${this.getCategoryByNameUri}/${t}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}catch(o){console.log(o)}}async deleteOneCategory(t){try{const e=await fetch(`${a.deleteCategoryByName}/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})}catch(e){console.log(e)}}async createOneCategory(t,e){const r=new FormData;r.append("file",e);try{const o=await fetch(`${a.createCategoryByName}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}catch(o){console.log(o)}try{const o=await fetch(`${a.uploadImage}`,{method:"POST",body:r})}catch(o){console.log(o)}}async updateOneProduct(t,e,r){if(r!=null){const o=new FormData;o.append("file",r);try{const n=await fetch(`${a.uploadImage}`,{method:"POST",body:o})}catch(n){console.log(n)}}try{const o=await fetch(`${this.getAllProductsUri}${t}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}catch(o){console.log(o)}}async deleteOneProduct(t){try{const e=await fetch(`${a.getAllProducts}${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})}catch(e){console.log(e)}}async createOneProduct(t,e){const r=new FormData;r.append("file",e);try{const o=await fetch(`${a.getAllProducts}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}catch(o){console.log(o)}try{const o=await fetch(`${a.uploadImage}`,{method:"POST",body:r})}catch(o){console.log(o)}}}export{p as F};
